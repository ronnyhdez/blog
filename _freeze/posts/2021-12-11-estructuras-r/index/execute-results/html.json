{
  "hash": "9b782b11821e0a2cda28f2ddbd273fd9",
  "result": {
    "markdown": "---\ntitle: \"Intro a datos y estructuras en R\"\ndescription: |\n   Una breve intro a estructuras en R.\nauthor:\n  - name: \"Ronny A. Hernandez Mora\"\n    url: \"https://ronnyale.com\"\n    affiliations: \n      - name: \"ixpantia\"\n        url: \"https://www.ixpantia.com\"\ndate: 2018-02-01\nlicence: \"CC BY-NC\"\nimage: images/structure.png\n---\n\n::: {.cell}\n\n```{.r .cell-code}\n# ---\n# title: \"Intro a datos y estructuras en R\"\n# description: |\n#   Una breve intro a estructuras en R.\n# author:\n#   - name: Ronny A. Hernández Mora\n#     url: http://ronnyhdez.rbind.io/\n# date: 2018-02-01\n# creative_commons: CC BY-NC\n# preview: images/structure.png\n# twitter:\n#   creator: \"@RonnyHdezM\"\n# output:\n#   distill::distill_article:\n#     self_contained: true\n# ---\n```\n:::\n\n\n\n\n\n# Datos y Estructuras\n\nEste pequeño e introductorio tutorial consiste en explicar cómo R en su entorno \"entiende\" los datos (objetos), es decir sus clases y además cómo los almacena en ese entorno. Entender este tipo de cosas básicas en R nos podrán ahorrar dolores de cabeza en futuros análisis de datos que hagamos.\n\n## Primer paso:\n\nPrimero tenemos que entender que R lee los datos que le damos de distintas maneras para poder manejarlos y hacer tareas que le pidamos. Entre estos tenemos:\n\n*  _character_: corresponden a texto\n*  _numeric_: corresponden a números\n*  _integer_: son números enteros (sin decimales)\n*  _logical_: son condicionales y están en forma de verdadero o falso\n*  _complex_: corresponden a números complejos\n\n\nPara crear vectores c( )\n\n\n::: {.cell}\n\n```{.r .cell-code}\na <- c(\"biologia\", \"A\", \"estadistica\")\nclass(a)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"character\"\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nb <- c(18.6, 90)\nclass(b)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"numeric\"\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nc <- c(18L, 26L)\nclass(c)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"integer\"\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nd <- 2 + 4i\nclass(d)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"complex\"\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ne <- c(TRUE, FALSE)\nclass(e)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"logical\"\n```\n:::\n:::\n\n\n# ¿Para qué sirven los tipos de datos?\n\nHay ciertas cosas que se deben de tomar en cuenta a la hora de trabajar con datos en R, y es que estos son guardados en estructuras. Es decir, R \"acomoda\" esos datos en formas que los puede manejar.\n\nEstos son algunos ejemplos rápidos:\n\n## Vectores elementos son del mismo tipo\n\n::: {.cell}\n\n```{.r .cell-code}\nv_1 <- c(10,20,30)\nv_2 <- c(\"a\",\"b\",\"c\")\nv_3 <- c(TRUE,FALSE,TRUE)\n```\n:::\n\n\n## Listas elementos son de diferente tipo \n\n::: {.cell}\n\n```{.r .cell-code}\nl_1 <- list(v_1,v_2,v_3)\n\nl_1\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[[1]]\n[1] 10 20 30\n\n[[2]]\n[1] \"a\" \"b\" \"c\"\n\n[[3]]\n[1]  TRUE FALSE  TRUE\n```\n:::\n:::\n\n\n## matrix es de dos dimensiones con elementos del mismo tipo:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmatrix_1 <- matrix(1:9,nrow = 3, ncol = 3)\nmatrix_1\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n     [,1] [,2] [,3]\n[1,]    1    4    7\n[2,]    2    5    8\n[3,]    3    6    9\n```\n:::\n:::\n\n\n## data frame es de dos dimensiones con elementos de diferente tipo:\n\n::: {.cell}\n\n```{.r .cell-code}\n# Primero creamos un par de vectores para unirlos en un dataframe\nnumero <- 1:5\nnombre <- c(\"Mercurio\",\"Venus\",\"Tierra\",\"Marte\",\"Jupiter\")\nplaneta <- data.frame(numero,nombre)\nplaneta\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  numero   nombre\n1      1 Mercurio\n2      2    Venus\n3      3   Tierra\n4      4    Marte\n5      5  Jupiter\n```\n:::\n:::\n\n\n## Array es una estructura de tres o más dimensiones:\n\n::: {.cell}\n\n```{.r .cell-code}\nD <- 1:12\ndim(D) <- c(2,3,2)        # Dos filas, tres columnas y dos \"caras\"\nD\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n, , 1\n\n     [,1] [,2] [,3]\n[1,]    1    3    5\n[2,]    2    4    6\n\n, , 2\n\n     [,1] [,2] [,3]\n[1,]    7    9   11\n[2,]    8   10   12\n```\n:::\n:::\n\n\n# Maneras de coercionar las clases\n\nHay ocasiones en las cuales R podría confundir lo que nosotros consideramos un dato de cierto tipo, por ejemplo un número lo podría leer como un carácter. A la hora de hacer algunos cálculos habrán problemas.\n\nPero existe una solución y esto es coercionar los tipos de los datos. Esto se puede hacer tal como se muestra en los siguientes ejemplos:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbiolo_vector <- c(20, 40, \"A\", 80)\nclass(biolo_vector)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"character\"\n```\n:::\n\n```{.r .cell-code}\nz <- as.numeric(biolo_vector)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: NAs introduced by coercion\n```\n:::\n\n```{.r .cell-code}\nz\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 20 40 NA 80\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nbiolo_vector <- c(20, 40, TRUE, 80)\nclass(biolo_vector)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"numeric\"\n```\n:::\n\n```{.r .cell-code}\nbiolo_vector\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 20 40  1 80\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nbiolo_vector <- c(20:60)\nbv_1 <- as.character(biolo_vector)\nbv_2 <- as.logical(biolo_vector)\nbv_3 <- as.complex(biolo_vector)\nclass(bv_1)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"character\"\n```\n:::\n\n```{.r .cell-code}\nclass(bv_2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"logical\"\n```\n:::\n\n```{.r .cell-code}\nclass(bv_3)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"complex\"\n```\n:::\n:::\n\n\n# Exploración datos:\n\nCuando traemos datos a R hay una manera fácil de visualizar su estructura o forma sin tener que acudir al documento original. A continuación mostramos una serie de ejemplos en los cuales se m\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndir()                              # ver que tengo en el wd\nhead(data)                         # Ver primeros 6 observaciones\ntail(data)                         # últimas 6 observaciones\nstr(data)                          # estructura del data.frame\ndim(data)                          # dimensiones (rows & columns)\nnames(data)                        # nombres columnas\nglimpse(data)                      # paquete diplyr\nsummary(data)                      # resumen de cada variable\n```\n:::\n\n\n## ¿Qué siginifica dir() y ls()?\n\ndir () me refiere a los archivos que se encuentran en el directorio\nde trabajo.\nls () me refiere a los objetos que se encuentran en el espacio\nde trabajo\n\n# Comprensión de un data frame y su estructura\n\nPara comprender mejor vamos a construir un data.frame\nde manera rápida y simple:\n\n# Creamos los vectores a unir:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nprimer_nombre <- c(\"Isaac\",\"Charles\",\"Rosalind\",\"Marie\") \n\nsegundo_nombre <- c(\"Newton\",\"Darwin\",\"Franklin\",\"Curie\")\n\nedad_muerte <- c(84, 73, 37, 66)\n\ncampo <- c(\"Física\", \"Biología\", \"Química\", \"Física\")\n\nfecha_muerte <- as.Date(c(\"1643-1-4\", \"1882-4-19\",\n                        \"1958-4-16\", \"1934-7-4\"))\n```\n:::\n\n\n# Unimos cada uno de los vectores en un data.frame\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncientificos <- data.frame(primer_nombre, segundo_nombre,\n                          edad_muerte, campo, fecha_muerte)\n```\n:::\n\n\n# Revisemos estructura igual que en caso anterior\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(cientificos)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  primer_nombre segundo_nombre edad_muerte    campo fecha_muerte\n1         Isaac         Newton          84   Física   1643-01-04\n2       Charles         Darwin          73 Biología   1882-04-19\n3      Rosalind       Franklin          37  Química   1958-04-16\n4         Marie          Curie          66   Física   1934-07-04\n```\n:::\n\n```{.r .cell-code}\nstr(cientificos)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n'data.frame':\t4 obs. of  5 variables:\n $ primer_nombre : chr  \"Isaac\" \"Charles\" \"Rosalind\" \"Marie\"\n $ segundo_nombre: chr  \"Newton\" \"Darwin\" \"Franklin\" \"Curie\"\n $ edad_muerte   : num  84 73 37 66\n $ campo         : chr  \"Física\" \"Biología\" \"Química\" \"Física\"\n $ fecha_muerte  : Date, format: \"1643-01-04\" \"1882-04-19\" ...\n```\n:::\n\n```{.r .cell-code}\n#glimpse(cientificos) con librería dplyr\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}