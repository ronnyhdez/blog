---
title: "A workflow for taking notes"
description: |
   An opinionated workflow for taking notes under version control and tools such
   as Markdown, Rmarkdown and Quarto with nvim.
date: 2023-03-39
categories: [Neovim, Linux, markdown, quarto, rmarkdown, docmaker]
licence: "CC BY-NC"
image: images/notes.png
---

# What is this about?

Have you found yourself with a ton of notes on diverse places, having 
difficulties finding where you left those notes that you took 2 months ago and
you need now? Don't remember inside which file you left a piece of information
that you need to retrieve now? Want to have a tool to just write without those
seven thousand buttons for options you don't need and are just crowding your
screen?

Well, I found myself in that situation, so I decided to create a workflow to
facilitate the process of taking notes and having them available as a website.

# The story behind my note taking workflow

One of the advises out there to learn anything is to take notes. When it comes
to learning coding and dev tools, it can be a little bit complicated given that
we may need to document code, run small examples and obtain the output to make
sense of our notes and explanations on why something works or not.

During my career as a data professional, I found myself taking notes on anything
that I easily have access: a piece of paper on my desk, a `.txt` file that I
just opened, a wiki in some repositories, documenting on issues, on my notebook
etc. Suddenly, when a problem comes again during my journey, I got the feeling
of "uhmm, I solved this some time ago and I think I took notes. Where are they?"
And at that point, I was spending more time trying to find out where those
specific notes were, instead of solving the problem (again, as if it were
something new)

Because of this, I tried to organized myself better, but it wasn't after several
iterations that I found a way that nowadays I feel comfortable with. I started
with forcing myself to just take notes on `.txt` files and classifying them in
folders with specific titles according to the type of problem/issue/topic. It
was fine: easy access, simple notes that I could take from the terminal or a
text editor that wasn't overcrowded with seven thousand buttons with unnecesary
options and also with a black background.

But at some point, I had many notes, and it was kind of hard to keep track of
topics, code, solutions, etc. I was lost again on my own notes when I needed to
retrieve information that my brain remembered vaguely. Some topics were too
similar, sometimes I had notes where it didn't correspond and I was loosing time
trying to find something that I annotated in the past.

I needed a new solution. But at this point I knew already a couple of things
that I wanted:

 - Simple plain text.
 - Easy to open.
 - With something to make a search easy and effective across all my notes.
 
You can be asking yourself why not to use just something like obsidian,
goodnotes, evernote, etc. Well, my biggest fear with external applications is
that I loose control over my own notes. I need to feel that the notes I take
belong to me, and also that I can have my own git repository to keep track of 
changes and a backup of the history of those changes.

Now, most of my notes contained code and sometimes I wanted to include
screenshots. Well, I was already using Rmarkdown for other projects, and this
could be one solution. Also, I already had this blog but the notes that I
include here are more elaborated than my raw notes (those that I usually take on
a piece of paper and put them on my desk drawer). On my search of something that
could help me with this, a talk by [Frans on DataLatam about MkDocs and Python](https://youtu.be/6H5RGmem8d0)
gave me the idea to take this as a system to manage my notes. 

What called my attention was that the documents can be written in `markdown`,
published as a web page, and there you will have a **search bar that can go through
all the notes**! With this in mind, I decided to create a couple of functions in R
that allowed me to create `.Rmd` files with notes and transform them to `.md`
files that were going to be published with GitHub pages. 

I put those functions inside an R package that I called
[Dockmaker](https://github.com/ronnyhdez/docmaker) Suddenly, more ideas came to
my mind. Also, I started using other tools like nvim (and the plugin for R
nvim-r), quarto or just simple `.md` files. I needed to update my workflow. 

With some work on my tools settings I was able to create a set of few steps that
allows me to quickly open a new file, write my notes and publish them to my
webpage of raw notes called [drawer](https://ronnyhdez.github.io/drawer/). When
I need to retrieve quickly some information from my notes, I have a table of
content and a search bar.

# The workflow

So, how do I take notes nowadays? Well, basically I have a repository where I
keep all my notes, and some `bash aliases` as a shortcut to start a new
document. This are the steps I follow if taking notes with `.md` documents:

 - I need to write something so in my terminal I write `dw`. Short for 
 "document write", that executes the following bash command:
 `cd Documents/repos/github/drawer; nvim`
 - I have an nvim session open. I start writting my notes with markdown 
 formatting.
 - When done, I will execute `:wq new_fle_name.md`
 - 
 
 
 
